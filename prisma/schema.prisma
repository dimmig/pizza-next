generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id        Int      @id @default(autoincrement())
  fullName  String
  email     String @unique
  password  String
  cart Cart?
  orders Order[]
  verificaitionCode VerificationCode?
  role UserRole @default(USER)
  provider String?
  providerId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id Int @id @default(autoincrement())
  name String
  image String
  category Cetegory @relation(fields: [categoryId], references: [id])
  categoryId Int
  ingridients Ingridient[]
  ingridientId Int
  productVariationsId ProductVariation[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductVariation {
  id Int @id @default(autoincrement())
  price Int
  size Int?
  pizzaType Int?
  product Product @relation(fields: [productId], references: [id])
  productId Int
  cartItems CartItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cetegory {
  id Int @id @default(autoincrement())
  name String @unique
  product Product[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Ingridient {
  id Int @id @default(autoincrement())
  name String @unique
  price Int
  image String
  products Product[]
  ingridients CartItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id Int @id @default(autoincrement())
  user User? @relation(fields: [userId], references: [id])
  userId Int? @unique
  totalAmount Int @default(0)
  token String
  items CartItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id Int @id @default(autoincrement())
  productItem ProductVariation @relation(fields: [productItemId], references: [id])
  productItemId Int
  cart Cart @relation(fields: [cartId], references: [id])
  cartId Int
  quantity Int
  ingridients Ingridient[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id Int @id @default(autoincrement())
  user User? @relation(fields: [userId], references: [id])
  userId Int?
  tokenId String
  totalAmount Int
  status OrderStatus
  paymentId String?
  items Json
  fullName String
  address String
  email String
  phone String
  comment String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationCode {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int @unique
  code String
  createdAt DateTime @default(now())
  @@unique([userId, code])
}

enum OrderStatus {
  PENDING
  SUCCEEDED
  CANCELLED
}

enum UserRole {
  USER
  ADMIN
}